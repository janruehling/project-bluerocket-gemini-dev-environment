version: '3.7'

services:

  db:
    build:
      context: .
      dockerfile: Dockerfile-Db
    image: local/gemini-db
    restart: unless-stopped
    ports:
      - "25060:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=doadmin
      - POSTGRES_DB=defaultdb
    volumes:
      - data_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U doadmin -d defaultdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../
      dockerfile: ./gemini-dev-environment/Dockerfile-Api
    image: local/gemini-api
    restart: unless-stopped
    env_file: .env-api
    ports:
      - "8080:8080"
    volumes:
      - ../gemini-api-node:/home/node/app
      - node_modules_api:/home/node/app/node_modules
    depends_on:
      - db
    command: >
      sh -c "
        npx sequelize db:migrate &&
        npx nodemon --exec babel-node src/server.js
      "

  web:
    build:
      context: ../
      dockerfile: ./gemini-dev-environment/Dockerfile-Web
    image: local/gemini-web
    restart: unless-stopped
    env_file: .env-web
    ports:
      - "3000:3000"
      - "9001:9001"
    volumes:
      - ../gemini-web-react:/home/node/app
      - node_modules_web:/home/node/app/node_modules
    depends_on:
      - api
    command: >
      sh -c "
        npx webpack-dev-server --config webpack.dev.js --color &
        npx start-storybook -p 9001 --quiet --ci
      "
 
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 4000:8080

volumes:
  node_modules_api:
  node_modules_web:
  data_db:
