version: '3'

services:
  api:
    build:
      context: ../
      dockerfile: ./gemini-dev-environment/Dockerfile-Api
    image: local/gemini-api
    container_name: api
    restart: unless-stopped
    env_file: .env-api
    ports:
      - "8080:8080"
    volumes:
      - ../gemini-api-node:/home/node/app
    command: /home/node/app/node_modules/.bin/nodemon --exec babel-node src/server.js

  web:
    build:
      context: ../
      dockerfile: ./gemini-dev-environment/Dockerfile-Web
    image: local/gemini-web
    container_name: web
    restart: unless-stopped
    env_file: .env-web
    ports:
      - "3000:3000"
      - "9001:9001"
    volumes:
      - ../gemini-web-react:/home/node/app
    command: >
      /bin/sh -c "/home/node/app/node_modules/.bin/webpack-dev-server --config webpack.dev.js --color & 
                  /home/node/app/node_modules/.bin/start-storybook -p 9001 --quiet --ci"
 
  db:
    build:
      context: .
      dockerfile: Dockerfile-Db
    image: local/gemini-db
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - data_db:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 4000:8080

volumes:
#  node_modules_api:
#  node_modules_web:
  data_db:
